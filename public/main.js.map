{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/app/shared/components/nav-bar/nav-bar.component.css","webpack:///./src/app/shared/components/nav-bar/nav-bar.component.html","webpack:///./src/app/shared/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/shared/guards/auth.guard.ts","webpack:///./src/app/shared/routes/app.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ht-nav-bar></ht-nav-bar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { AuthService } from './services/auth.service';\nimport { Component, isDevMode } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  constructor(private authService: AuthService) {\n    this.authService.apiUrl = environment.apiUrl;\n  }\n\n}\n","import { AuthGuard } from './shared/guards/auth.guard';\nimport { AuthService } from './services/auth.service';\n// Core Modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n// Core Modules\n\n// Other Modules\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { JwtModule } from '@auth0/angular-jwt';\n// Other Modules\n\n// Custom Components\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './shared/components/nav-bar/nav-bar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\n// Custom Components\n\n// Custom Services\nimport { ValidateService } from './services/validate.service';\n// Custom Services\n\n// Routing\nimport { appRoutingProviders, routing } from './shared/routes/app.routing';\nimport { HttpClientModule } from '@angular/common/http';\n// Routing\n\n// Fetch JWT token from localstorage\nexport function jwtTokenGetter() {\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule,\n    routing,\n    HttpClientModule,\n    FlashMessagesModule.forRoot(),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter,\n        whitelistedDomains: ['localhost:8080', 'localhost:4500'],\n        authScheme: ''\n      }\n    })\n  ],\n  providers: [appRoutingProviders, ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"bs-docs-section\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-header\\\">\\n        <h1 id=\\\"containers\\\">&nbsp;</h1>\\n      </div>\\n      <div class=\\\"bs-component\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <h1 class=\\\"display-3\\\">Your Dashboard seems to be Empty :(</h1>\\n            </div>\\n          </div>\\n          <hr>\\n        </div>\\n        <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"bs-docs-section\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-header\\\">\\n        <h1 id=\\\"containers\\\">&nbsp;</h1>\\n      </div>\\n      <div class=\\\"bs-component\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <h1 class=\\\"display-3\\\">Specifications</h1>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-sm-6\\\">\\n              <div class=\\\"bs-component\\\">\\n                <blockquote class=\\\"blockquote text-center\\\">\\n                  <p class=\\\"mb-0\\\">Express Backend</p>\\n                  <footer class=\\\"blockquote-footer\\\">Express.js, or simply Express, is a web application framework for\\n                    Node.js,\\n                    released\\n                    as free and open-source software under the MIT License. It is designed for building web\\n                    applications and\\n                    APIs</footer>\\n                </blockquote>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-sm-6\\\">\\n              <div class=\\\"bs-component\\\">\\n                <blockquote class=\\\"blockquote text-center\\\">\\n                  <p class=\\\"mb-0\\\">Angular CLI</p>\\n                  <footer class=\\\"blockquote-footer\\\">The Angular CLI makes it easy to create an application that already\\n                    works,\\n                    right out\\n                    of the box. It already follows our best practices!</footer>\\n                </blockquote>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-sm-6\\\">\\n              <div class=\\\"bs-component\\\">\\n                <blockquote class=\\\"blockquote text-center\\\">\\n                  <p class=\\\"mb-0\\\">JWT Token</p>\\n                  <footer class=\\\"blockquote-footer\\\">JSON Web Token is a JSON-based open standard for creating access\\n                    tokens\\n                    that\\n                    assert\\n                    some number of claims. For example, a server could generate a token that has the claim \\\"logged in\\n                    as\\n                    admin\\\"\\n                    and\\n                    provide that to a client.</footer>\\n                </blockquote>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"bs-docs-section\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-header\\\">\\n        <h1 id=\\\"containers\\\">&nbsp;</h1>\\n      </div>\\n      <div class=\\\"bs-component\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <h2 id=\\\"forms\\\">Login</h2>\\n          <form (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">Username</label>\\n              <input type=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Enter Username\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter Password\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n          </form>\\n        </div>\\n        <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { User } from '../../shared/models/user.model';\nimport { AuthService } from './../../services/auth.service';\nimport { ValidateService } from '../../services/validate.service';\n\n@Component({\n  selector: 'ht-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public username: string;\n  public password: string;\n\n  constructor(private validateService: ValidateService, private authService: AuthService,\n    private flashMessagesService: FlashMessagesService, private router: Router) { }\n\n\n  ngOnInit() {\n  }\n\n  login() {\n\n    const user = {\n      username: this.username,\n      password: this.password,\n    };\n\n    if (!this.validateService.validateLogin(user)) {\n      this.flashMessagesService.show('Please fill all the fields.', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    } else {\n      this.authService.loginUser(user).subscribe((data: Response) => {\n        if (data['success'] === true) {\n          this.authService.storeTokenData(data['token'], data['user']);\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.flashMessagesService.show(data['message'], { cssClass: 'alert-danger', timeout: 3000 });\n        }\n      });\n    }\n\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"bs-docs-section\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-header\\\">\\n        <h1 id=\\\"containers\\\">&nbsp;</h1>\\n      </div>\\n      <div class=\\\"bs-component\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <h1 class=\\\"display-3\\\">{{user.name}}</h1>\\n            </div>\\n          </div>\\n          <hr>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 col-sm-12\\\">\\n              <div class=\\\"bs-component\\\">\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item\\\">Username : {{user.username}}</li>\\n                  <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n                </ul>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Router } from '@angular/router';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(public authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile: Response) => {\n      this.user = profile['user'];\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"bs-docs-section\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-header\\\">\\n        <h1 id=\\\"containers\\\">&nbsp;</h1>\\n      </div>\\n      <div class=\\\"bs-component\\\">\\n        <div class=\\\"jumbotron\\\">\\n          <h2 id=\\\"forms\\\">Register User</h2>\\n          <form (ngSubmit)=\\\"registerUser()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Enter Name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">Username</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Enter Username\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter Email\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter Password\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button>\\n          </form>\\n        </div>\\n        <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { AuthService } from './../../services/auth.service';\nimport { ValidateService } from './../../services/validate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/models/user.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ht-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  public name: string;\n  public username: string;\n  public email: string;\n  public password: string;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private validateService: ValidateService, private authService: AuthService,\n    private flashMessagesService: FlashMessagesService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  registerUser() {\n    const user: User = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessagesService.show('Please fill all the fields.', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    } else if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessagesService.show('Please fill valid email.', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    } else {\n      this.authService.addUser(user).subscribe((data: Response) => {\n        if (data['success'] === true) {\n          this.flashMessagesService.show(data['message'], { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/login']);\n        } else {\n          this.flashMessagesService.show('Something went wrong!', { cssClass: 'alert-danger', timeout: 3000 });\n          this.router.navigate(['/register']);\n        }\n      });\n    }\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../shared/models/user.model';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public apiUrl = ``; // For Developement\n  // public apiUrl = ``; // For Production\n  public authToken: string;\n  public user: User;\n\n  constructor(private http: HttpClient, private jwtHelperService: JwtHelperService) { }\n\n  addUser(user: User): Observable<Response> {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(`${this.apiUrl}users/register`, user, {}).pipe(map((data: Response) => {\n      return data;\n    }));\n  }\n\n\n  loginUser(user): Observable<Response> {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(`${this.apiUrl}users/authenticate`, user, {}).pipe(map((data: Response) => {\n      return data;\n    }));\n  }\n\n\n  getProfile(): Observable<Response> {\n    this.loadToken();\n    let headers = new HttpHeaders();\n    // headers = headers.append('Authorization', this.authToken);\n    headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n    return this.http.get(`${this.apiUrl}users/profile`, { headers: headers }).pipe(map((data: Response) => {\n      return data;\n    }));\n  }\n\n\n  storeTokenData(token: string, user: User) {\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('id_token', token);\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout() {\n    localStorage.clear();\n    this.authToken = null;\n    this.user = null;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    return !this.jwtHelperService.isTokenExpired(this.authToken);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user: User): boolean {\n    if (user.name === undefined || user.username === undefined || user.email === undefined || user.password === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email: string): boolean {\n    // tslint:disable-next-line:max-line-length\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email);\n  }\n\n\n  validateLogin(user): boolean {\n    if (user.username === undefined || user.password === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Mean Auth App</a>\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <div id=\\\"navbar\\\" class=\\\"navbar-collapse\\\">\\n        <!-- Left Links -->\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['/home']\\\">Home</a></li>\\n\\n          <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\"\\n              [routerLink]=\\\"['/dashboard']\\\">Dashboard</a></li>\\n          <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\"\\n              [routerLink]=\\\"['/profile']\\\">Profile</a></li>\\n        </ul>\\n        <!-- Right Links-->\\n        <ul class=\\\"navbar-nav\\\">\\n          <li *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\"\\n              [routerLink]=\\\"['/login']\\\">Login</a></li>\\n          <li *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\"\\n              [routerLink]=\\\"['/register']\\\">Register</a></li>\\n          <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\n        </ul>\\n      </div>\\n\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Router } from '@angular/router';\nimport { AuthService } from './../../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'ht-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(public authService: AuthService, private flashMessagesService: FlashMessagesService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessagesService.show('You are now logged out', { cssClass: 'alert-success', timeout: 3000 });\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(public authService: AuthService, public router: Router) {\n  }\n\n  canActivate(): boolean {\n    // Check whether 'authToken' is empty in authService\n    if (!this.authService.authToken) {\n      this.authService.authToken = localStorage.getItem('id_token');\n    }\n\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { DashboardComponent } from './../../components/dashboard/dashboard.component';\nimport { RegisterComponent } from './../../components/register/register.component';\nimport { LoginComponent } from './../../components/login/login.component';\nimport { HomeComponent } from './../../components/home/home.component';\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\nimport { ProfileComponent } from '../../components/profile/profile.component';\nimport { AuthGuard } from 'src/app/shared/guards/auth.guard';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' }, // default\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }\n];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true });\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: `http://localhost:4500/`\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}